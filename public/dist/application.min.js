"use strict";var ApplicationConfiguration=function(){var applicationModuleName="friendlyroad",applicationModuleVendorDependencies=["ngResource","ngCookies","ngAnimate","ngTouch","ngSanitize","ui.router","ui.bootstrap","ui.utils"],registerModule=function(moduleName,dependencies){angular.module(moduleName,dependencies||[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider",function($locationProvider){$locationProvider.hashPrefix("!")}]),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),ApplicationConfiguration.registerModule("core"),ApplicationConfiguration.registerModule("froadies"),ApplicationConfiguration.registerModule("journeys"),ApplicationConfiguration.registerModule("milestones"),ApplicationConfiguration.registerModule("roadblocks"),ApplicationConfiguration.registerModule("sherpas"),ApplicationConfiguration.registerModule("users"),angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/"),$stateProvider.state("home",{url:"/",templateUrl:"modules/core/views/home.client.view.html"})}]),angular.module("core").controller("HeaderController",["$scope","Authentication","Menus",function($scope,Authentication,Menus){$scope.authentication=Authentication,$scope.isCollapsed=!1,$scope.menu=Menus.getMenu("topbar"),$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!1})}]),angular.module("core").controller("HomeController",["$scope","Authentication",function($scope,Authentication){$scope.authentication=Authentication,$scope.alerts=[{icon:"glyphicon-user",color:"btn-primary",total:"TBA",description:"TOTAL FROADADIES"},{icon:"glyphicon-calendar",color:"btn-primary",total:"TBA",description:"MILESTONES"},{icon:"glyphicon-edit",color:"btn-primary",total:"TBA",description:"NEW FROADADIES TODAY"},{icon:"glyphicon-record",color:"btn-primary",total:"TBA",description:"PROJECTS"},{icon:"glyphicon-flag",color:"btn-primary",total:"TBA",description:"ROADBLOCKS CHALLENGED"},{icon:"glyphicon-eye-open",color:"btn-primary",total:"TBA",description:"SHERPAS TO THE RESCUE"}]}]),angular.module("core").service("Menus",[function(){this.defaultRoles=["*"],this.menus={};var shouldRender=function(user){if(!user)return this.isPublic;if(~this.roles.indexOf("*"))return!0;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exists")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,isPublic,roles){return this.menus[menuId]={isPublic:isPublic||!1,roles:roles||this.defaultRoles,items:[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,menuItemTitle,menuItemURL,menuItemType,menuItemUIRoute,isPublic,roles,position){return this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:menuItemTitle,link:menuItemURL,menuItemType:menuItemType||"item",menuItemClass:menuItemType,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].roles:roles,position:position||0,items:[],shouldRender:shouldRender}),this.menus[menuId]},this.addSubMenuItem=function(menuId,rootMenuItemURL,menuItemTitle,menuItemURL,menuItemUIRoute,isPublic,roles,position){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===rootMenuItemURL&&this.menus[menuId].items[itemIndex].items.push({title:menuItemTitle,link:menuItemURL,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].items[itemIndex].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].items[itemIndex].roles:roles,position:position||0,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===menuItemURL&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].link===submenuItemURL&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar")}]),angular.module("froadies").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Froadies","froadies","dropdown","/friends(/create)?"),Menus.addSubMenuItem("topbar","froadies","List Froadies","froadies")}]),angular.module("froadies").config(["$stateProvider",function($stateProvider){$stateProvider.state("listFroadies",{url:"/friends",templateUrl:"modules/friends/views/list-friends.client.view.html"})}]),angular.module("froadies").controller("FroadiesCreateController",["$scope","Froadies","Notify",function($scope,Froadies,Notify){$scope.myStyleOptions=[{id:"1",opt:"Hermit"},{id:"2",opt:"Rabble Rowzer"},{id:"3",opt:"Puzzle Solver"},{id:"4",opt:"The Boss"},{id:"5",opt:"Social Butterfly"},{id:"6",opt:"Perfectionist"}],this.create=function(){var froadie=new Froadies({firstName:this.firstName,lastName:this.lastName,email:this.email,skill1:this.skill1,skill2:this.skill2,wifm1:this.wifm1,founder:this.founder,myStyle:this.myStyle,website:this.website});froadie.$save(function(response){Notify.sendMsg("NewFroadie",{id:response._id})},function(errorResponse){$scope.error=errorResponse.data.message})}}]),angular.module("froadies").controller("FroadiesUpdateController",["$scope","Froadies","Notify",function($scope,Froadies,Notify){$scope.myStyleOptions=[{id:"1",opt:"Hermit"},{id:"2",opt:"Rabble Rowzer"},{id:"3",opt:"Puzzle Solver"},{id:"4",opt:"The Boss"},{id:"5",opt:"Social Butterfly"},{id:"6",opt:"Perfectionist"}],this.update=function(updatedFroadadie){var froadadie=updatedFroadadie;froadadie.$update(function(response){Notify.sendMsg("UpdatedFroadadie",{id:response._id})},function(errorResponse){$scope.error=errorResponse.data.message})}}]),angular.module("froadies").controller("FroadiesController",["$scope","$stateParams","Authentication","Froadies","$modal","$log",function($scope,$stateParams,Authentication,Froadies,$modal,$log){this.authentication=Authentication,this.froadies=Froadies.query(),this.modalUpdate=function(size,selectedFroadie){var modalInstance=$modal.open({templateUrl:"modules/friends/views/update-friend.modal.view.html",controller:["$scope","$modalInstance","aFroadie",function($scope,$modalInstance,aFroadie){$scope.theFroadie={},$scope.theFroadie=angular.copy(aFroadie),$scope.ok=function(){$modalInstance.close()},$scope.cancel=function(){$modalInstance.dismiss("cancel")}}],size:size,resolve:{aFroadie:function(){return selectedFroadie}}});modalInstance.result.then(function(selectedItem){$scope.selected=selectedItem},function(){$log.info("Modal dismissed at: "+new Date)})},this.modalCreate=function(size){var modalInstance=$modal.open({templateUrl:"modules/friends/views/create-friend.modal.view.html",controller:["$scope","$modalInstance",function($scope,$modalInstance){$scope.ok=function(){$modalInstance.close()},$scope.cancel=function(){$modalInstance.dismiss("cancel")}}],size:size});modalInstance.result.then(function(){},function(){$log.info("Modal dismissed at: "+new Date)})},this.remove=function(froadie){if(froadie){froadie.$remove();for(var i in this.froadies)this.froadies[i]===froadie&&this.froadies.splice(i,1)}else this.froadie.$remove(function(){})}}]),angular.module("froadies").directive("froadieList",["Froadies","Notify",function(Froadies,Notify){return{restrict:"E",transclude:!0,templateUrl:"modules/friends/views/friend-list-template.html",link:function(scope){Notify.getMsg("NewFroadie",function(){scope.froadiesCtrl.froadies=Froadies.query()}),Notify.getMsg("UpdatedFroadie",function(){scope.froadiesCtrl.froadies=Froadies.query()})}}}]),angular.module("froadies").factory("Froadies",["$resource",function($resource){return $resource("friends/:froadieId",{froadieId:"@_id"},{update:{method:"PUT"}})}]),angular.module("froadies").factory("Notify",["$rootScope",function($rootScope){var notify={};return notify.sendMsg=function(msg,data){data=data||{},$rootScope.$emit(msg,data),console.log("message sent!")},notify.getMsg=function(msg,func,scope){var unbind=$rootScope.$on(msg,func);scope&&scope.$on("destroy",unbind)},notify}]),angular.module("journeys").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Journeys","journeys","dropdown","/journeys(/create)?"),Menus.addSubMenuItem("topbar","journeys","List Journeys","journeys")}]),angular.module("journeys").config(["$stateProvider",function($stateProvider){$stateProvider.state("listJourneys",{url:"/journeys",templateUrl:"modules/journeys/views/list-journey.client.view.html"})}]),angular.module("journeys").controller("JourneysCreateController",["$scope","Journeys","Notify",function($scope,Journeys,Notify){$scope.mainTechnologyOptions=[{id:"1",opt:"Ruby"},{id:"2",opt:"HTML5"},{id:"3",opt:"Python"},{id:"4",opt:"Nodejs"},{id:"5",opt:"CMS"},{id:"6",opt:"NonTech"}],this.create=function(){var journey=new Journeys({description:this.description,mainTechnology:this.mainTechnology,initiator:this.initiator,googleDocs:this.googleDocs,recruiting:this.recruiting,sponsor:this.sponsor,stage:this.stage});journey.$save(function(response){Notify.sendMsg("NewJourney",{id:response._id})},function(errorResponse){$scope.error=errorResponse.data.message})}}]),angular.module("journeys").controller("JourneysUpdateController",["$scope","Journeys","Notify",function($scope,Journeys,Notify){$scope.mainTechnologyOptions=[{id:"1",opt:"Ruby"},{id:"2",opt:"HTML5"},{id:"3",opt:"Python"},{id:"4",opt:"Nodejs"},{id:"5",opt:"CMS"},{id:"6",opt:"NonTech"}],this.update=function(updatedJourney){var journey=updatedJourney;journey.$update(function(response){Notify.sendMsg("UpdatedJourney",{id:response._id})},function(errorResponse){$scope.error=errorResponse.data.message})}}]),angular.module("journeys").controller("JourneysController",["$scope","$stateParams","Authentication","Journeys","$modal","$log",function($scope,$stateParams,Authentication,Journeys,$modal,$log){this.authentication=Authentication,this.journeys=Journeys.query(),this.modalCreate=function(size){var modalInstance=$modal.open({templateUrl:"modules/journeys/views/create-journey.modal.view.html",controller:["$scope","$modalInstance",function($scope,$modalInstance){$scope.ok=function(){$modalInstance.close()},$scope.cancel=function(){$modalInstance.dismiss("cancel")}}],size:size});modalInstance.result.then(function(){},function(){$log.info("Modal dismissed at: "+new Date)})},this.modalUpdate=function(size,selectedJourney){var modalInstance=$modal.open({templateUrl:"modules/journeys/views/update-journey.modal.view.html",controller:["$scope","$modalInstance","aJourney",function($scope,$modalInstance,aJourney){$scope.theJourney={},$scope.theJourney=angular.copy(aJourney),$scope.ok=function(){$modalInstance.close()},$scope.cancel=function(){$modalInstance.dismiss("cancel")}}],size:size,resolve:{aJourney:function(){return selectedJourney}}});modalInstance.result.then(function(selectedItem){$scope.selected=selectedItem},function(){$log.info("Modal dismissed at: "+new Date)})},this.remove=function(journey){if(journey){journey.$remove();for(var i in this.journeys)this.journeys[i]===journey&&this.journeys.splice(i,1)}else this.journey.$remove(function(){})}}]),angular.module("journeys").directive("journeyList",["Journeys","Notify",function(Journeys,Notify){return{restrict:"E",transclude:!0,templateUrl:"modules/journeys/views/journey-list-template.html",link:function(scope){Notify.getMsg("NewJourney",function(){scope.journeysCtrl.journeys=Journeys.query()}),Notify.getMsg("UpdatedJourney",function(){scope.journeysCtrl.journeys=Journeys.query()})}}}]),angular.module("journeys").factory("Journeys",["$resource",function($resource){return $resource("journeys/:journeyId",{journeyId:"@_id"},{update:{method:"PUT"}})}]),angular.module("journeys").factory("Notify",["$rootScope",function($rootScope){var notify={};return notify.sendMsg=function(msg,data){data=data||{},$rootScope.$emit(msg,data)},notify.getMsg=function(msg,func,scope){var unbind=$rootScope.$on(msg,func);scope&&scope.$on("destroy",unbind)},notify}]),angular.module("milestones").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Milestones","milestones","dropdown","/milestones(/create)?"),Menus.addSubMenuItem("topbar","milestones","List Milestones","milestones")}]),angular.module("milestones").config(["$stateProvider",function($stateProvider){$stateProvider.state("listMilestones",{url:"/milestones",templateUrl:"modules/milestones/views/list-milestones.client.view.html"})}]),angular.module("milestones").controller("MilestonesCreateController",["$scope","Milestones","Notify",function($scope,Milestones,Notify){$scope.achievementOptions=[{id:"1",opt:"Begin Journey"},{id:"2",opt:"Discovery"},{id:"3",opt:"Pivot"},{id:"4",opt:"Validate"},{id:"5",opt:"Other Side"}],this.create=function(){var milestone=new Milestones({name:this.name,major:this.major,achievement:this.achievement,event:this.event,nextDate:this.nextDate});milestone.$save(function(response){Notify.sendMsg("NewMilestone",{id:response._id})},function(errorResponse){$scope.error=errorResponse.data.message})}}]),angular.module("milestones").controller("MilestonesUpdateController",["$scope","Milestones","Notify",function($scope,Milestones,Notify){$scope.achievementOptions=[{id:"1",opt:"Begin Journey"},{id:"2",opt:"Discovery"},{id:"3",opt:"Pivot"},{id:"4",opt:"Validate"},{id:"5",opt:"Other Side"}],this.update=function(updatedMilestone){var milestone=updatedMilestone;milestone.$update(function(response){Notify.sendMsg("UpdatedMilestone",{id:response._id})},function(errorResponse){$scope.error=errorResponse.data.message})}}]),angular.module("milestones").controller("MilestonesController",["$scope","$stateParams","Authentication","Milestones","$modal","$log",function($scope,$stateParams,Authentication,Milestones,$modal,$log){this.authentication=Authentication,this.milestones=Milestones.query(),this.modalCreate=function(size){var modalInstance=$modal.open({templateUrl:"modules/milestones/views/create-milestone.modal.view.html",controller:["$scope","$modalInstance",function($scope,$modalInstance){$scope.ok=function(){$modalInstance.close()},$scope.cancel=function(){$modalInstance.dismiss("cancel")}}],size:size});modalInstance.result.then(function(){},function(){$log.info("Modal dismissed at: "+new Date)})},this.modalUpdate=function(size,selectedMilestone){var modalInstance=$modal.open({templateUrl:"modules/milestones/views/update-milestone.modal.view.html",controller:["$scope","$modalInstance","aMilestone",function($scope,$modalInstance,aMilestone){$scope.theMilestone={},$scope.theMilestone=angular.copy(aMilestone),$scope.ok=function(){$modalInstance.close()},$scope.cancel=function(){$modalInstance.dismiss("cancel")}}],size:size,resolve:{aMilestone:function(){return selectedMilestone}}});modalInstance.result.then(function(selectedItem){$scope.selected=selectedItem},function(){$log.info("Modal dismissed at: "+new Date)})},this.remove=function(milestone){if(milestone){milestone.$remove();for(var i in this.milestones)this.milestones[i]===milestone&&this.milestones.splice(i,1)}else this.milestone.$remove(function(){})}}]),angular.module("milestones").directive("milestoneList",["Milestones","Notify",function(Milestones,Notify){return{restrict:"E",transclude:!0,templateUrl:"modules/milestones/views/milestone-list-template.html",link:function(scope){Notify.getMsg("NewMilestone",function(){scope.milestonesCtrl.milestones=Milestones.query()}),Notify.getMsg("UpdatedMilestone",function(){scope.milestonesCtrl.milestones=Milestones.query()})}}}]),angular.module("milestones").factory("Milestones",["$resource",function($resource){return $resource("milestones/:milestoneId",{milestoneId:"@_id"},{update:{method:"PUT"}})}]),angular.module("milestones").factory("Notify",["$rootScope",function($rootScope){var notify={};return notify.sendMsg=function(msg,data){data=data||{},$rootScope.$emit(msg,data)},notify.getMsg=function(msg,func,scope){var unbind=$rootScope.$on(msg,func);scope&&scope.$on("destroy",unbind)},notify}]),angular.module("roadblocks").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Roadblocks","roadblocks","dropdown","/roadblocks(/create)?"),Menus.addSubMenuItem("topbar","roadblocks","List Roadblocks","roadblocks")}]),angular.module("roadblocks").config(["$stateProvider",function($stateProvider){$stateProvider.state("listRoadblocks",{url:"/roadblocks",templateUrl:"modules/roadblocks/views/list-roadblocks.client.view.html"})}]),angular.module("roadblocks").controller("RoadblocksCreateController",["$scope","Roadblocks","Notify",function($scope,Roadblocks,Notify){$scope.nameOptions=[{id:"1",opt:"Time Machine"},{id:"2",opt:"Travel Guide"},{id:"3",opt:"Treasure Map"},{id:"4",opt:"Shady Tree"},{id:"5",opt:"Message in a Bottle"},{id:"6",opt:"Fire Side Chat"}],this.create=function(){var roadblock=new Roadblocks({name:this.name,description:this.description,sherpa:this.sherpa,googleDocs:this.googleDocs});roadblock.$save(function(response){Notify.sendMsg("NewRoadblock",{id:response._id})},function(errorResponse){$scope.error=errorResponse.data.message})}}]),angular.module("roadblocks").controller("RoadblocksUpdateController",["$scope","Roadblocks","Notify",function($scope,Roadblocks,Notify){$scope.nameOptions=[{id:"1",opt:"Time Machine"},{id:"2",opt:"Travel Guide"},{id:"3",opt:"Treasure Map"},{id:"4",opt:"Shady Tree"},{id:"5",opt:"Message in a Bottle"},{id:"6",opt:"Fire Side Chat"}],this.update=function(updatedRoadblock){var roadblock=updatedRoadblock;roadblock.$update(function(response){Notify.sendMsg("UpdatedRoadbock",{id:response._id})},function(errorResponse){$scope.error=errorResponse.data.message})}}]),angular.module("roadblocks").controller("RoadblocksController",["$scope","$stateParams","Authentication","Roadblocks","$modal","$log",function($scope,$stateParams,Authentication,Roadblocks,$modal,$log){this.authentication=Authentication,this.roadblocks=Roadblocks.query(),this.modalCreate=function(size){var modalInstance=$modal.open({templateUrl:"modules/roadblocks/views/create-roadblock.modal.view.html",controller:["$scope","$modalInstance",function($scope,$modalInstance){$scope.ok=function(){$modalInstance.close()},$scope.cancel=function(){$modalInstance.dismiss("cancel")}}],size:size});modalInstance.result.then(function(){},function(){$log.info("Modal dismissed at: "+new Date)})},this.modalUpdate=function(size,selectedRoadblock){var modalInstance=$modal.open({templateUrl:"modules/roadblocks/views/update-roadblock.modal.view.html",controller:["$scope","$modalInstance","aRoadblock",function($scope,$modalInstance,aRoadblock){$scope.theRoadblock={},$scope.theRoadblock=angular.copy(aRoadblock),$scope.ok=function(){$modalInstance.close()},$scope.cancel=function(){$modalInstance.dismiss("cancel")}}],size:size,resolve:{aRoadblock:function(){return selectedRoadblock}}});modalInstance.result.then(function(selectedItem){$scope.selected=selectedItem},function(){$log.info("Modal dismissed at: "+new Date)})},this.remove=function(roadblock){if(roadblock){roadblock.$remove();for(var i in this.roadblocks)this.roadblocks[i]===roadblock&&this.roadblocks.splice(i,1)}else this.roadblock.$remove(function(){})}}]),angular.module("roadblocks").directive("roadblocksList",["Roadblocks","Notify",function(Roadblocks,Notify){return{restrict:"E",transclude:!0,templateUrl:"modules/roadblocks/views/roadblock-list-template.html",link:function(scope){Notify.getMsg("NewRoadblock",function(){scope.roadblocksCtrl.roadbocks=Roadblocks.query()}),Notify.getMsg("UpdatedRoadblock",function(){scope.roadblocksCtrl.roadblocks=Roadblocks.query()})}}}]),angular.module("roadblocks").factory("Notify",["$rootScope",function($rootScope){var notify={};return notify.sendMsg=function(msg,data){data=data||{},$rootScope.$emit(msg,data)},notify.getMsg=function(msg,func,scope){var unbind=$rootScope.$on(msg,func);scope&&scope.$on("destroy",unbind)},notify}]),angular.module("roadblocks").factory("Roadblocks",["$resource",function($resource){return $resource("roadblocks/:roadblockId",{roadblockId:"@_id"},{update:{method:"PUT"}})}]),angular.module("sherpas").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Sherpas","sherpas","dropdown","/sherpas(/create)?"),Menus.addSubMenuItem("topbar","sherpas","List Sherpas","sherpas")}]),angular.module("sherpas").config(["$stateProvider",function($stateProvider){$stateProvider.state("listSherpas",{url:"/sherpas",templateUrl:"modules/sherpas/views/list-sherpas.client.view.html"})}]),angular.module("sherpas").controller("SherpasCreateController",["$scope","Sherpas","Notify",function($scope,Sherpas,Notify){$scope.challengeOptions=[{id:"Mentor",opt:"Mentor"},{id:"Tester",opt:"Tester"},{id:"Customer",opt:"Customer"},{id:"Planner",opt:"Planner"},{id:"Validator",opt:"Validator"}],this.create=function(){var sherpa=new Sherpas({challenge:this.challenge,sherpa:this.sherpa,sherpaName:this.sherpaName});sherpa.$save(function(response){Notify.sendMsg("NewSherpa",{id:response._id})},function(errorResponse){$scope.error=errorResponse.data.message})}}]),angular.module("sherpas").controller("SherpasUpdateController",["$scope","Sherpas","Notify",function($scope,Sherpas,Notify){$scope.challengeOptions=[{id:"1",opt:"Mentor"},{id:"2",opt:"Tester"},{id:"3",opt:"Customer"},{id:"4",opt:"Planner"},{id:"5",opt:"Validator"}],this.update=function(updatedSherpa){var sherpa=updatedSherpa;sherpa.$update(function(response){Notify.sendMsg("UpdatedSherpa",{id:response._id})},function(errorResponse){$scope.error=errorResponse.data.message})}}]),angular.module("sherpas").controller("SherpasController",["$scope","$stateParams","Authentication","Sherpas","$modal","$log","$modal","$log",function($scope,$stateParams,Authentication,Sherpas,$modal,$log){this.authentication=Authentication,this.sherpas=Sherpas.query(),this.modalCreate=function(size){var modalInstance=$modal.open({templateUrl:"modules/sherpas/views/create-sherpa.modal.view.html",controller:["$scope","$modalInstance",function($scope,$modalInstance){$scope.ok=function(){$modalInstance.close()},$scope.cancel=function(){$modalInstance.dismiss("cancel")}}],size:size});modalInstance.result.then(function(){},function(){$log.info("Modal dismissed at: "+new Date)})},this.modalUpdate=function(size,selectedSherpa){var modalInstance=$modal.open({templateUrl:"modules/sherpas/views/update-sherpa.modal.view.html",controller:["$scope","$modalInstance","aSherpa",function($scope,$modalInstance,aSherpa){$scope.theSherpa={},$scope.theSherpa=angular.copy(aSherpa),$scope.ok=function(){$modalInstance.close()},$scope.cancel=function(){$modalInstance.dismiss("cancel")}}],size:size,resolve:{aSherpa:function(){return selectedSherpa}}});modalInstance.result.then(function(selectedItem){$scope.selected=selectedItem},function(){$log.info("Modal dismissed at: "+new Date)})},this.remove=function(sherpa){if(sherpa){sherpa.$remove();for(var i in this.sherpas)this.sherpas[i]===sherpa&&this.sherpas.splice(i,1)}else this.sherpa.$remove(function(){})}}]),angular.module("sherpas").directive("sherpaList",["Sherpas","Notify",function(Sherpas,Notify){return{restrict:"E",transclude:!0,templateUrl:"modules/Sherpas/views/sherpa-list-template.html",link:function(scope){Notify.getMsg("NewSherpa",function(){scope.sherpasCtrl.sherpas=Sherpas.query()}),Notify.getMsg("UpdatedSherpa",function(){scope.sherpasCtrl.sherpas=Sherpas.query()})}}}]),angular.module("sherpas").factory("Notify",["$rootScope",function($rootScope){var notify={};return notify.sendMsg=function(msg,data){data=data||{},$rootScope.$emit(msg,data)},notify.getMsg=function(msg,func,scope){var unbind=$rootScope.$on(msg,func);scope&&scope.$on("destroy",unbind)},notify}]),angular.module("sherpas").factory("Sherpas",["$resource",function($resource){return $resource("sherpas/:sherpaId",{sherpaId:"@_id"},{update:{method:"PUT"}})}]),angular.module("users").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("signin");break;case 403:}return $q.reject(rejection)}}}])}]),angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("profile",{url:"/settings/profile",templateUrl:"modules/users/views/settings/edit-profile.client.view.html"}).state("password",{url:"/settings/password",templateUrl:"modules/users/views/settings/change-password.client.view.html"}).state("accounts",{url:"/settings/accounts",templateUrl:"modules/users/views/settings/social-accounts.client.view.html"}).state("signup",{url:"/signup",templateUrl:"modules/users/views/authentication/signup.client.view.html"}).state("signin",{url:"/signin",templateUrl:"modules/users/views/authentication/signin.client.view.html"}).state("forgot",{url:"/password/forgot",templateUrl:"modules/users/views/password/forgot-password.client.view.html"}).state("reset-invalid",{url:"/password/reset/invalid",templateUrl:"modules/users/views/password/reset-password-invalid.client.view.html"}).state("reset-success",{url:"/password/reset/success",templateUrl:"modules/users/views/password/reset-password-success.client.view.html"}).state("reset",{url:"/password/reset/:token",templateUrl:"modules/users/views/password/reset-password.client.view.html"})}]),angular.module("users").controller("AuthenticationController",["$scope","$http","$location","Authentication",function($scope,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.signup=function(){$http.post("/auth/signup",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})},$scope.signin=function(){$http.post("/auth/signin",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("PasswordController",["$scope","$stateParams","$http","$location","Authentication",function($scope,$stateParams,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.askForPasswordReset=function(){$scope.success=$scope.error=null,$http.post("/auth/forgot",$scope.credentials).success(function(response){$scope.credentials=null,$scope.success=response.message}).error(function(response){$scope.credentials=null,$scope.error=response.message})},$scope.resetUserPassword=function(){$scope.success=$scope.error=null,$http.post("/auth/reset/"+$stateParams.token,$scope.passwordDetails).success(function(response){$scope.passwordDetails=null,Authentication.user=response,$location.path("/password/reset/success")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("SettingsController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.user||$location.path("/"),$scope.hasConnectedAdditionalSocialAccounts=function(){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http["delete"]("/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})},$scope.updateUserProfile=function(isValid){if(isValid){$scope.success=$scope.error=null;var user=new Users($scope.user);user.$update(function(response){$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})}else $scope.submitted=!0},$scope.changeUserPassword=function(){$scope.success=$scope.error=null,$http.post("/users/password",$scope.passwordDetails).success(function(){$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message})}}]),angular.module("users").factory("Authentication",[function(){var _this=this;return _this._data={user:window.user},_this._data}]),angular.module("users").factory("Users",["$resource",function($resource){return $resource("users",{},{update:{method:"PUT"}})}]);
